/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package root.main.swing;

import javafx.application.Platform;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import root.main.General;
import root.main.common.Properties;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

/**
 * @author balin
 */
public class ChannelPicker extends javax.swing.JDialog {

    private General general;

    private Properties properties;

    private List<String> labelsOfTheChannels;

    @Autowired
    @Lazy
    private void autowire(General general, Properties properties) {
        this.general = general;
        this.properties = properties;
        labelsOfTheChannels = general.getDataModel().getEeg_file().getHeader().getLabelsOfTheChannels();
        List<String> toDisplayList = general.getUpdateHandlerController().getSelectedChannels().stream().map(channelNumber -> labelsOfTheChannels.get(channelNumber)).collect(Collectors.toList());
        DefaultListModel<String> toDisplayModel = new DefaultListModel<>();
        toDisplayModel.addAll(toDisplayList);
        displayedChannelsList.setModel(toDisplayModel);
        DefaultListModel<String> notToDisplayModel = new DefaultListModel<>();
        notToDisplayModel.addAll(labelsOfTheChannels);
        notDisplayedChannelsList.setModel(notToDisplayModel);
        displayedChannelsList.setFixedCellHeight(20);
        notDisplayedChannelsList.setFixedCellHeight(20);
        displayedChannelsList.setPreferredSize(new java.awt.Dimension(0, toDisplayModel.getSize() * displayedChannelsList.getFixedCellHeight()));
        notDisplayedChannelsList.setPreferredSize(new java.awt.Dimension(0, notToDisplayModel.getSize() * notDisplayedChannelsList.getFixedCellHeight()));
    }

    /**
     * Creates new form ChannelPicker
     */
    public ChannelPicker(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocation((int) ((Toolkit.getDefaultToolkit().getScreenSize().getWidth() - this.getWidth()) / 2), (int) ((Toolkit.getDefaultToolkit().getScreenSize().getHeight() - this.getHeight()) / 2));
        KeyboardFocusManager.getCurrentKeyboardFocusManager().addKeyEventDispatcher(e -> {
            if (e.getID() == KeyEvent.KEY_RELEASED) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    dispose();
                    return true;
                }
            }
            return false;
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        notDisplayedChannelsList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayedChannelsList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select Channels");
        setMinimumSize(new java.awt.Dimension(400, 300));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setMinimumSize(new java.awt.Dimension(0, 0));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(0, 0));

        notDisplayedChannelsList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        notDisplayedChannelsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        notDisplayedChannelsList.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        notDisplayedChannelsList.setMinimumSize(new java.awt.Dimension(0, 350));
        notDisplayedChannelsList.setPreferredSize(new java.awt.Dimension(0, 350));
        notDisplayedChannelsList.setVisibleRowCount(4);
        jScrollPane2.setViewportView(notDisplayedChannelsList);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Channels in file");
        jPanel2.add(jLabel1, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel2);

        jPanel1.setMaximumSize(new java.awt.Dimension(0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(150, 0));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButton2.setText("< - Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel1.add(jButton2, gridBagConstraints);

        jButton1.setText("Select All");
        jButton1.setActionCommand("Select all");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 100;
        jPanel1.add(jButton1, gridBagConstraints);

        jButton3.setText("Add - >");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel1.add(jButton3, gridBagConstraints);

        jButton4.setText("OK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        jPanel1.add(jButton4, gridBagConstraints);

        getContentPane().add(jPanel1);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 130));

        displayedChannelsList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        displayedChannelsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        displayedChannelsList.setMaximumSize(new java.awt.Dimension(0, 0));
        displayedChannelsList.setMinimumSize(new java.awt.Dimension(0, 500));
        displayedChannelsList.setPreferredSize(new java.awt.Dimension(0, 500));
        jScrollPane1.setViewportView(displayedChannelsList);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Selected channels");
        jPanel3.add(jLabel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel3);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        ListModel<String> listModel = displayedChannelsList.getModel();
        List<String> toDisplayList = IntStream.range(0, listModel.getSize()).mapToObj(listModel::getElementAt).collect(Collectors.toList());
        Platform.runLater(() -> general.getUpdateHandlerController().getSelectedChannels().setAll(toDisplayList.stream().map(s -> labelsOfTheChannels.indexOf(s)).collect(Collectors.toList())));
    }//GEN-LAST:event_formWindowClosed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        notDisplayedChannelsList.setSelectionInterval(0, notDisplayedChannelsList.getModel().getSize());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        List<String> selectedValuesList = displayedChannelsList.getSelectedValuesList();
        selectedValuesList.forEach(s -> {
            ((DefaultListModel) displayedChannelsList.getModel()).removeElement(s);
        });
        notDisplayedChannelsList.setPreferredSize(new java.awt.Dimension(0, displayedChannelsList.getModel().getSize() * displayedChannelsList.getFixedCellHeight()));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        List<String> selectedValuesList = notDisplayedChannelsList.getSelectedValuesList();
        ListModel<String> listModel = displayedChannelsList.getModel();
        List<String> toDisplayList = IntStream.range(0, listModel.getSize()).mapToObj(listModel::getElementAt).collect(Collectors.toList());
        selectedValuesList.forEach(s -> {
            if (!toDisplayList.contains(s)) {
                ((DefaultListModel) displayedChannelsList.getModel()).addElement(s);
            }
        });
        displayedChannelsList.setPreferredSize(new java.awt.Dimension(0, listModel.getSize() * displayedChannelsList.getFixedCellHeight()));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> displayedChannelsList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> notDisplayedChannelsList;
    // End of variables declaration//GEN-END:variables
}
