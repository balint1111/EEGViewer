/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package root.main.swing;

import javafx.collections.ListChangeListener;
import javafx.collections.ObservableList;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import root.main.General;
import root.main.common.Properties;

import javax.swing.table.DefaultTableModel;
import java.util.List;

/**
 *
 * @author balin
 */
public class CurrentValueWatcher extends javax.swing.JDialog {
    private General general;

    private Properties properties;

    private List<String> labelsOfTheChannels;

    @Autowired
    @Lazy
    private void autowire(General general, Properties properties) {
        this.general = general;
        this.properties = properties;
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        ObservableList<Integer> selectedChannels = general.getUpdateHandlerController().getSelectedChannels();

        tableInit(dtm, selectedChannels);
        selectedChannels.addListener((ListChangeListener<? super Integer>) c -> {
            tableInit(dtm, selectedChannels);
        });
        general.getCurrentValuesProperty().addListener((observable, oldValue, newValue) -> {
            for (int i = 0; i < selectedChannels.size(); i++) {
                Integer channelNumber = selectedChannels.get(i);
                dtm.setValueAt(newValue.get(channelNumber), i, 1);
            }
        });
    }

    private void tableInit(DefaultTableModel dtm, ObservableList<Integer> selectedChannels) {
        labelsOfTheChannels = general.getDataModel().getEeg_file().getHeader().getLabelsOfTheChannels();
        dtm.getDataVector().removeAllElements();
        for (Integer channelNumber : selectedChannels) {
            dtm.addRow(new Object [] {labelsOfTheChannels.get(channelNumber), 0f});
        }
    }


    /**
     * Creates new form CurrentValueWatcher
     */
    public CurrentValueWatcher(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Channel name", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
